{"version":3,"sources":["components/Header.js","components/SingleListItems.js","components/ItemLists.js","components/Menu.js","components/MenuList.js","components/SingleEpisodesItems.js","components/Episodes.js","components/Structure.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SingleListItems","name","dob","occupetation","status","logo","src","alt","ItemLists","useState","result","setresult","offset","setoffset","perpage","pagecount","setpagecount","alldata","setalldata","fetchData","a","api","fetch","data","json","response","searchData","e","preventDefault","value","document","getElementById","replace","getalldata","length","Math","ceil","useEffect","method","type","placeholder","id","onClick","window","location","reload","map","itemlist","img","birthday","occupation","char_id","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedpage","selected","containerClassName","subContainerClassName","activeClassName","pageLinkClassName","pageClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","Menu","React","menulist","setmenulist","querySelector","style","display","class","MenuList","to","SingleEpisodesItems","air_date","episode","series","season","Episodes","allepisodedata","epi_data","fetchApiData","searchEpisodes","event","SeachData","slice","title","episode_id","pageSelected","Structure","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45e6042a.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <div>\n                <section className=\"header-items\">\n                    <div className=\"header-title text-center\">\n                        <h1>The Breaking Bad</h1>\n                    </div> \n                     \n                </section> \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const SingleListItems = ({name,dob,occupetation,status,logo}) => {\n    \n    return (\n       \n            <section className=\"col-xs-12 col-sm-6 col-md-4 col-lg-4 col-xl-4 col-xxl-4\">\n                <div className=\"items m-2  w-20  d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row flex-xll-row\" >\n                    <div className=\"imgae py-2 ms-1\">\n                        <img src={logo} alt=\" of character\" />\n                    </div>\n                    <div className=\"details py-2 px-1 ps-2 overflow-scroll\">\n                        <h3 className=\"name\">{name}</h3>\n                        <div className=\"dob-occupation d-flex flex-column\">\n                            <p className=\"dob\">{dob}</p>\n                            <p className=\"occupetion\">{occupetation}</p>\n                            <h3 className=\"status\">\n                            {\n                                status === \"Presumed dead\" ? \"Dead\" : status \n                             }\n                        </h3>\n                        </div>\n                       \n                    </div>\n                </div>\n            </section>\n    )\n}\n","import React,{useState,useEffect} from  'react'\nimport ReactPaginate from 'react-paginate';\nimport {SingleListItems} from './SingleListItems.js';\n\nexport const ItemLists = () => {\n    const [result, setresult] = useState([]);\n    const [offset, setoffset] = useState(0);\n    const [perpage] = useState(10);\n    const [pagecount, setpagecount] = useState(0);\n    const [alldata, setalldata] = useState([]);\n\n    const fetchData = async ()=>{\n        let api = 'https://www.breakingbadapi.com/api/characters?limit='+perpage+'&offset='+(offset*perpage);\n        const data = await fetch(api);\n        const response = await data.json();\n        setresult(response);\n       \n        \n    }\n\nconst searchData =  async (e) =>{\n    e.preventDefault();\n\n    let value = document.getElementById(\"search\").value;\n    value = value.replace(/\\s/g, '+');\n    const data = await fetch(\"https://www.breakingbadapi.com/api/characters?name=\"+value);\n    const response = await data.json();\n\n    setresult(response);\n\n}\n\nconst increase = (e) =>{\n    const selectedpage = e.selected;\n    setoffset(selectedpage);\n}\n\n\nconst getalldata = async ()=>{\n    const api = 'https://www.breakingbadapi.com/api/characters';\n    const data = await fetch(api);\n    const response = await data.json();\n    if(alldata.length === 0 ){\n        setalldata(response);\n    }  \n    setpagecount(Math.ceil(alldata.length/perpage));\n    \n}\n\n\n\nconst reset = () =>{\n    window.location.reload();\n}\n\n\nuseEffect(() => {\n    getalldata();\n\n\n}, [alldata])\n\n\n    useEffect(() => {\n       \n        fetchData();\n        \n    },[offset])\n\n\n\n    \n\n\n    return (\n        <div>\n                <section className=\"container-fluid\">\n                <div className=\"search d-flex justify-content-end px-2 pt-2\">\n                    <form method=\"post\" ></form>\n                        {/* <input type=\"text\" placeholder=\"Search by name\" id=\"search\" />     */}\n                        <input className=\"form-control me-1\" type=\"text\" placeholder=\"Search by name\" aria-label=\"Search by name\" id=\"search\"/>\n                        <input  type=\"button\" value=\"Submit\" className=\"btn btn-primary px-2 me-1\" onClick = {searchData}/>\n                        <input  type=\"reset\" value=\"Rest\" className=\"btn btn-danger px-2\" onClick = {reset}/>\n                </div>  \n                <div className=\"row\">\n                    {\n                        result.map((itemlist)=>{\n                            return <SingleListItems logo={itemlist.img} name = {itemlist.name} key={itemlist.char_id} dob = {itemlist.birthday} occupetation={itemlist.occupation} status={itemlist.status} />\n                        })\n                    }\n                    \n                </div>\n                <div className=\"row\">\n\n                <section className=\"col-12\">\n                        <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pagecount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={3}\n                    onPageChange={increase}\n                    containerClassName={\"pagination justify-content-center\"}\n                    subContainerClassName={\"page-item\"}\n                    activeClassName={\"active page-item\"}\n                    pageLinkClassName={'page-link'}\n                    pageClassName = {\"page-item\"}\n                    previousClassName = {'page-item'}\n                    previousLinkClassName = {'page-link'}\n                    nextClassName = {'page-item'}\n                    nextLinkClassName = {'page-link'}\n                    />\n                \n                </section>\n\n                </div>\n                </section>\n        </div>\n    )\n}\n","import React from 'react'\n\n\nexport const Menu = () => {\n    const [menulist, setmenulist] = React.useState(0)\n\n\n    const showMenuList = () =>{\n      \n\n       if(menulist === 1){\n           document.querySelector('.sidebardiv').style.display = \"block\";\n           setmenulist(0)\n   \n       }\n       else{\n        document.querySelector('.sidebardiv').style.display = \"none\";\n            // document.querySelector(\".header\").style.marginLeft=\"0\";\n            // document.querySelector(\".menu\").style.marginLeft=\"0\";\n            // document.querySelector(\".main-items\").style.marginLeft=\"0\";\n        setmenulist(1)\n\n           \n       }\n    }\n\n    return (\n        <div className=\"menu-div\">\n            <div className=\"menu d-flex justify-content-between pt-1 px-2\">\n                <p>Menu</p>\n                <button className=\"Menu-button\" onClick = {()=>showMenuList()}><i class=\"fas fa-bars\"></i></button>\n                    \n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {\n    Link\n  } from \"react-router-dom\";\n  \n\nexport const MenuList = () => {\n    return (\n        <div>\n            <section className=\"menu-list\">\n\n<nav className=\"manu-item-holder\">\n    <ul className=\"menu-items text-center\">\n\n\n\n        <li className=\"py-2 ps-3 mt-1 activate\">\n            \n            <Link to=\"/\" className=\"dashboard menu-item-links\">Home</Link>\n            \n        </li>\n\n\n\n\n\n\n        <li className=\"py-2 ps-3 mt-1\">\n            \n            <Link to=\"/Episodes\" className=\"Lead menu-item-links\">Episodes</Link>\n            \n        </li>\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n    </ul>\n</nav>\n\n</section>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const SingleEpisodesItems = ({name,air_date,episode,series,season}) => {\n    return (\n        <section className=\"col-xs-12 col-sm-6 col-md-4 col-lg-4 col-xl-4 col-xxl-4\">\n                <div className=\"items m-2  w-20  d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row flex-xll-row\" >\n                    <div className=\"details py-2 px-1 ps-2\">\n                        <h3 className=\"name\">{name}</h3>\n                        <div className=\"dob-occupation d-flex flex-column\">\n                            <p className=\"season\">{\"Season \"+season}</p>\n                            <p className=\"dob\">{\"air-date \"+air_date}</p>\n                            <p className=\"occupetion\">{\"Episode \"+episode}</p>\n                        </div>\n                        <h3 className=\"status\">\n                            {\n                                series\n                             }\n                        </h3>\n                    </div>\n                </div>\n            </section>\n    )\n}\n","import React,{useState,useEffect} from 'react'\nimport ReactPaginate from 'react-paginate';\nimport {SingleEpisodesItems} from './SingleEpisodesItems.js'\n\nexport const Episodes = () => {\n    const [alldata, setalldata] = useState([]);\n    const [offset, setoffset] = useState(0);\n    const [pagecount, setpagecount] = useState(0);\n    const [perpage] = useState(10);\n    const [result, setresult] = useState([]);\n   \n\n    const allepisodedata = async () =>{\n        let epi_data = await fetch(\"https://www.breakingbadapi.com/api/episodes\");\n        epi_data = await epi_data.json();\n        alldata.length === 0 ? setalldata(epi_data) : setpagecount(Math.ceil(alldata.length/perpage));\n }\n\n const fetchApiData = async () => {\n        let response = await fetch('https://www.breakingbadapi.com/api/episodes?limit='+perpage+'&offset='+(offset*perpage));\n        response = await response.json();\n        setresult(response);\n }\n\n const searchEpisodes = async (event) => {\n    event.preventDefault();\n\n    let SeachData = document.getElementById(\"search\").value;\n    SeachData = SeachData.replace(/\\s/g, '+');\n    const data = await fetch(\"https://www.breakingbadapi.com/api/episodes?series=\"+SeachData);\n    const response = await data.json();\n\n    setresult(response);\n }\n\n const reset = () =>{\n     \n }\n\n const increaseOffset = (e) =>{\n    let pageSelected = e.selected;\n    setoffset(pageSelected);\n }\n\n    useEffect(() => {\n        allepisodedata();\n    }, [alldata]);\n\n    useEffect(() => {\n        fetchApiData();\n    }, [offset]);\n\n\n    return (\n        <div>\n                <section className=\"container-fluid\">\n                <div className=\"search d-flex justify-content-end px-2 pt-2\">\n                    <form method=\"post\" ></form>\n                        {/* <input type=\"text\" placeholder=\"Search by name\" id=\"search\" />     */}\n                        <input className=\"form-control me-1\" type=\"text\" placeholder=\"Search by series\" aria-label=\"Search by name\" id=\"search\"/>\n                        <input  type=\"button\" value=\"Submit\" className=\"btn btn-primary px-2 me-1\" onClick = {searchEpisodes}/>\n                        <input  type=\"reset\" value=\"Rest\" className=\"px-2 btn btn-danger\" onClick = {reset}/>\n                </div>  \n                <div className=\"row\">\n                    {\n                        result.slice(perpage*offset,perpage*(offset+1)).map((itemlist)=>{\n                            return <SingleEpisodesItems season={itemlist.season} name = {itemlist.title} key={itemlist.episode_id} air_date = {itemlist.air_date} episode={itemlist.episode} series={itemlist.series} />\n                        })\n                        \n                    }\n                    \n                </div>\n                <div className=\"row\">\n\n                <section className=\"col-12\">\n                        <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pagecount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={6}\n                    onPageChange={increaseOffset}\n                    containerClassName={\"pagination justify-content-center\"}\n                    subContainerClassName={\"page-item\"}\n                    activeClassName={\"active page-item\"}\n                    pageLinkClassName={'page-link'}\n                    pageClassName = {\"page-item\"}\n                    previousClassName = {'page-item'}\n                    previousLinkClassName = {'page-link'}\n                    nextClassName = {'page-item'}\n                    nextLinkClassName = {'page-link'}\n                    />\n                \n                </section>\n\n                </div>\n                </section>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Header} from './Header.js';\nimport {ItemLists} from './ItemLists.js';\nimport {Menu} from './Menu.js';\nimport { MenuList } from './MenuList.js';\nimport {Episodes} from './Episodes.js'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\n\n\nexport const Structure = () => {\n    return (\n    <Router>\n        <div>\n        <section className=\"container-fluid w-100\">\n                <section className=\"row\">\n                    \n                    <div className=\"col-12 header\">\n                            <Header  />\n                    </div>\n                    <div className=\"col-12 menu\">\n                        <Menu />\n                    </div>\n                    <div className=\"col-12\">\n                    <dic className=\"sidebardiv\">\n                        <MenuList />\n                    </dic>\n                        \n                    </div>\n                    <div className=\"col-12 main-items\">\n                    <Switch>\n                        <Route exact path=\"/\" component={ItemLists}></Route>\n                        <Route exact path=\"/Episodes\" component ={ Episodes }></Route>\n                    </Switch>\n                        \n                    </div>\n                </section>\n        </section>\n        </div>\n    </Router>\n    )\n}\n","import React from 'react';\nimport {Structure} from './components/Structure.js'\nimport './Style/index.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Structure />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}